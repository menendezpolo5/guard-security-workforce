apiVersion: v1
kind: Secret
metadata:
  name: backend-secret
  namespace: guard-security
type: Opaque
data:
  # Base64 encoded values - replace with actual encoded secrets
  DATABASE_URL: cG9zdGdyZXNxbDovL2d1YXJkX3VzZXI6c3VwZXJfc2VjdXJlX3Bhc3N3b3JkQHBvc3RncmVzLXNlcnZpY2U6NTQzMi9ndWFyZF9wcm9k
  REDIS_URL: cmVkaXM6Ly86cmVkaXNfc2VjdXJlX3Bhc3N3b3JkQHJlZGlzLXNlcnZpY2U6NjM3OQ==
  JWT_SECRET: c3VwZXJfc2VjdXJlX2p3dF9zZWNyZXRfa2V5XzEyMw==
  CLERK_SECRET_KEY: Y2xlcmtfc2VjcmV0X2tleV9oZXJl
  AWS_ACCESS_KEY_ID: YXdzX2FjY2Vzc19rZXlfaWQ=
  AWS_SECRET_ACCESS_KEY: YXdzX3NlY3JldF9hY2Nlc3Nfa2V5
  FIREBASE_PRIVATE_KEY: ZmlyZWJhc2VfcHJpdmF0ZV9rZXk=
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-config
  namespace: guard-security
data:
  NODE_ENV: "production"
  PORT: "3000"
  CORS_ORIGIN: "https://admin.guard-security.com,https://client.guard-security.com"
  API_VERSION: "v1"
  LOG_LEVEL: "info"
  RATE_LIMIT_WINDOW_MS: "900000"
  RATE_LIMIT_MAX_REQUESTS: "100"
  SESSION_TIMEOUT: "3600000"
  FILE_UPLOAD_MAX_SIZE: "10485760"
  AWS_REGION: "us-east-1"
  AWS_S3_BUCKET: "guard-security-uploads"
  FIREBASE_PROJECT_ID: "guard-security-app"
  EMAIL_FROM: "noreply@guard-security.com"
  BACKUP_SCHEDULE: "0 2 * * *"
  MONITORING_ENABLED: "true"
  SECURITY_HEADERS_ENABLED: "true"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-api
  namespace: guard-security
  labels:
    app: backend-api
    version: v1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: backend-api
  template:
    metadata:
      labels:
        app: backend-api
        version: v1
    spec:
      containers:
      - name: backend-api
        image: ghcr.io/menendezpolo5/guard-security-workforce-backend:latest
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: backend-secret
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: backend-secret
              key: REDIS_URL
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: backend-secret
              key: JWT_SECRET
        - name: CLERK_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: backend-secret
              key: CLERK_SECRET_KEY
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: backend-secret
              key: AWS_ACCESS_KEY_ID
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: backend-secret
              key: AWS_SECRET_ACCESS_KEY
        - name: FIREBASE_PRIVATE_KEY
          valueFrom:
            secretKeyRef:
              name: backend-secret
              key: FIREBASE_PRIVATE_KEY
        envFrom:
        - configMapRef:
            name: backend-config
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: logs
        emptyDir: {}
      initContainers:
      - name: migrate-db
        image: ghcr.io/menendezpolo5/guard-security-workforce-backend:latest
        command: ['npm', 'run', 'db:migrate']
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: backend-secret
              key: DATABASE_URL
---
apiVersion: v1
kind: Service
metadata:
  name: backend-api-service
  namespace: guard-security
  labels:
    app: backend-api
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: backend-api
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: backend-api-hpa
  namespace: guard-security
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: backend-api
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60